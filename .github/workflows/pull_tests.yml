# name: PullclangCI

# env:
#   # Force the stdout and stderr streams to be unbuffered
#   PYTHONUNBUFFERED: 1

# on:  # yamllint disable-line rule:truthy
#   push:
#   # pull_request:
#   #   types:
#   #     - synchronize
#   #     - reopened
#   #     - opened
#   #   branches:
#   #     - master
#   #   paths-ignore:
#   #     - 'CHANGELOG.md'
#   #     - 'README.md'
#   #     - 'SECURITY.md'
#   #     - 'docker/docs/**'
#   #     - 'docs/**'
#   #     - 'utils/check-style/aspell-ignore/**'  
# jobs:
#   DockerHubPushAarch64:
#     runs-on: [self-hosted, ibm-vm]
#     steps:
#       - name: test
#         run: env    
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#       - name: Images check
#         run: |
#           cd "$GITHUB_WORKSPACE/tests/ci"
#           python3 docker_images_check.py --suffix aarch64
#       - name: Upload images files to artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: changed_images_aarch64
#           path: ${{ runner.temp }}/docker_images_check/changed_images_aarch64.json
#   DockerHubPushAmd64:
#     runs-on: [self-hosted, ibm-vm]
#     steps:
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#       - name: Images check
#         run: |
#           cd "$GITHUB_WORKSPACE/tests/ci"
#           python3 docker_images_check.py --suffix amd64
#       - name: Upload images files to artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: changed_images_amd64
#           path: ${{ runner.temp }}/docker_images_check/changed_images_amd64.json
#   DockerHubPush:
#     needs: [DockerHubPushAmd64, DockerHubPushAarch64]
#     runs-on: [self-hosted, ibm-vm]
#     steps:
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#       - name: Download changed aarch64 images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images_aarch64
#           path: ${{ runner.temp }}
#       - name: Download changed amd64 images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images_amd64
#           path: ${{ runner.temp }}
#       - name: Images check
#         run: |
#           cd "$GITHUB_WORKSPACE/tests/ci"
#           python3 docker_manifests_merge.py --suffix amd64 --suffix aarch64
#       - name: Upload images files to artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ runner.temp }}/changed_images.json
#   BuilderBinClangTidy:
#     needs: [DockerHubPush]
#     runs-on: [self-hosted, ibm-vm]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_tidy
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
  # BuilderBinDarwin:
  #   needs: [DockerHubPush]
  #   runs-on: [self-hosted, builder]
  #   steps:
  #     - name: Set envs
  #       run: |
  #         cat >> "$GITHUB_ENV" << 'EOF'
  #         TEMP_PATH=${{runner.temp}}/build_check
  #         IMAGES_PATH=${{runner.temp}}/images_path
  #         REPO_COPY=${{runner.temp}}/build_check/ClickHouse
  #         CACHES_PATH=${{runner.temp}}/../ccaches
  #         BUILD_NAME=binary_darwin
  #         EOF
  #     - name: Download changed images
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: changed_images
  #         path: ${{ env.IMAGES_PATH }}
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         submodules: true
  #     - name: Build
  #       run: |
  #         sudo rm -fr "$TEMP_PATH"
  #         mkdir -p "$TEMP_PATH"
  #         cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
  #         cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
  #     - name: Upload build URLs to artifacts
  #       if: ${{ success() || failure() }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BUILD_URLS }}
  #         path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"                  
  # BuilderBinDarwinAarch64:
  #   needs: [DockerHubPush]
  #   runs-on: [self-hosted, builder]
  #   steps:
  #     - name: Set envs
  #       run: |
  #         cat >> "$GITHUB_ENV" << 'EOF'
  #         TEMP_PATH=${{runner.temp}}/build_check
  #         IMAGES_PATH=${{runner.temp}}/images_path
  #         REPO_COPY=${{runner.temp}}/build_check/ClickHouse
  #         CACHES_PATH=${{runner.temp}}/../ccaches
  #         BUILD_NAME=binary_darwin_aarch64
  #         EOF
  #     - name: Download changed images
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: changed_images
  #         path: ${{ env.IMAGES_PATH }}
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         submodules: true
  #     - name: Build
  #       run: |
  #         sudo rm -fr "$TEMP_PATH"
  #         mkdir -p "$TEMP_PATH"
  #         cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
  #         cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
  #     - name: Upload build URLs to artifacts
  #       if: ${{ success() || failure() }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BUILD_URLS }}
  #         path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"                   
  # BuilderDebRelease:
  #   needs: [DockerHubPush]
  #   runs-on: [self-hosted, builder]
  #   steps:
  #     - name: Set envs
  #       run: |
  #         cat >> "$GITHUB_ENV" << 'EOF'
  #         TEMP_PATH=${{runner.temp}}/build_check
  #         IMAGES_PATH=${{runner.temp}}/images_path
  #         REPO_COPY=${{runner.temp}}/build_check/ClickHouse
  #         CACHES_PATH=${{runner.temp}}/../ccaches
  #         BUILD_NAME=package_release
  #         EOF
  #     - name: Download changed images
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: changed_images
  #         path: ${{ env.IMAGES_PATH }}
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         fetch-depth: 0  # for performance artifact
  #         submodules: true
  #     - name: Build
  #       run: |
  #         sudo rm -fr "$TEMP_PATH"
  #         mkdir -p "$TEMP_PATH"
  #         cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
  #         cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
  #     - name: Upload build URLs to artifacts
  #       if: ${{ success() || failure() }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BUILD_URLS }}
  #         path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH"
  # BuilderDebAarch64:
  #   needs: [DockerHubPush]
  #   runs-on: [self-hosted, test-only]
  #   steps:
  #     - name: Set envs
  #       run: |
  #         cat >> "$GITHUB_ENV" << 'EOF'
  #         TEMP_PATH=${{runner.temp}}/build_check
  #         IMAGES_PATH=${{runner.temp}}/images_path
  #         REPO_COPY=${{runner.temp}}/build_check/ClickHouse
  #         CACHES_PATH=${{runner.temp}}/../ccaches
  #         BUILD_NAME=package_aarch64
  #         EOF
  #     - name: Download changed images
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: changed_images
  #         path: ${{ runner.temp }}/images_path
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         submodules: true
  #         fetch-depth: 0  # for performance artifact
  #     - name: Build
  #       run: |
  #         sudo rm -fr "$TEMP_PATH"
  #         mkdir -p "$TEMP_PATH"
  #         cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
  #         cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
  #     - name: Upload build URLs to artifacts
  #       if: ${{ success() || failure() }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BUILD_URLS }}
  #         path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
  # MarkReleaseReady:
  #   needs:
  #     - BuilderBinDarwin
  #     - BuilderBinDarwinAarch64
  #     - BuilderDebRelease
  #     - BuilderDebAarch64
  #   runs-on: [self-hosted, builder]
  #   steps:
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #     - name: Mark Commit Release Ready
  #       run: |
  #         cd "$GITHUB_WORKSPACE/tests/ci"
  #         python3 mark_release_ready.py


name: docker-check

env:
  # Force the stdout and stderr streams to be unbuffered
  PYTHONUNBUFFERED: 1

on:  # yamllint disable-line rule:truthy
  push:
  # pull_request:
  #   types:
  #     - synchronize
  #     - reopened
  #     - opened
  #   branches:
  #     - master
  #   paths-ignore:
  #     - 'CHANGELOG.md'
  #     - 'README.md'
  #     - 'SECURITY.md'
  #     - 'docker/docs/**'
  #     - 'docs/**'
  #     - 'utils/check-style/aspell-ignore/**'
##########################################################################################
##################################### SMALL CHECKS #######################################
##########################################################################################
jobs:
  # CheckLabels:
  #   runs-on: [self-hosted, style-checker]
  #   # Run the first check always, even if the CI is cancelled
  #   if: ${{ always() }}
  #   steps:
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #     - name: Labels check
  #       run: |
  #         cd "$GITHUB_WORKSPACE/tests/ci"
  #         python3 run_check.py
  # PythonUnitTests:
  #   runs-on: [self-hosted, style-checker]
  #   steps:
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #     - name: Python unit tests
  #       run: |
  #         cd "$GITHUB_WORKSPACE/tests/ci"
  #         echo "Testing the main ci directory"
  #         python3 -m unittest discover -s . -p '*_test.py'
  #         for dir in *_lambda/; do
  #           echo "Testing $dir"
  #           python3 -m unittest discover -s "$dir" -p '*_test.py'
  #         done
  DockerHubPushAarch64:
    # needs: CheckLabels
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix aarch64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}/docker_images_check/changed_images_aarch64.json
  DockerHubPushAmd64:
    # needs: CheckLabels
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_images_check.py --suffix amd64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}/docker_images_check/changed_images_amd64.json
  DockerHubPush:
    needs: [DockerHubPushAmd64, DockerHubPushAarch64]
    runs-on: [self-hosted, style-checker]
    steps:
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
      - name: Download changed aarch64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_aarch64
          path: ${{ runner.temp }}
      - name: Download changed amd64 images
        uses: actions/download-artifact@v3
        with:
          name: changed_images_amd64
          path: ${{ runner.temp }}
      - name: Images check
        run: |
          cd "$GITHUB_WORKSPACE/tests/ci"
          python3 docker_manifests_merge.py --suffix amd64 --suffix aarch64
      - name: Upload images files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: changed_images
          path: ${{ runner.temp }}/changed_images.json
          
#   StyleCheck:
#     needs: DockerHubPush
#     runs-on: [self-hosted, style-checker]
#     # We need additional `&& ! cancelled()` to have the job being able to cancel
#     if: ${{ success() || failure() || ( always() && ! cancelled() ) }}
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{ runner.temp }}/style_check
#           ROBOT_CLICKHOUSE_SSH_KEY<<RCSK
#           ${{secrets.ROBOT_CLICKHOUSE_SSH_KEY}}
#           RCSK
#           EOF
#       - name: Download changed images
#         # even if artifact does not exist, e.g. on `do not test` label or failed Docker job
#         continue-on-error: true
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.TEMP_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#       - name: Style Check
#         run: |
#           cd "$GITHUB_WORKSPACE/tests/ci"
#           python3 style_check.py
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH"
#   FastTest:
#     needs: DockerHubPush
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/fasttest
#           REPO_COPY=${{runner.temp}}/fasttest/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           EOF
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.TEMP_PATH }}
#       - name: Fast Test
#         run: |
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 fast_test_check.py
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
# ##   CompatibilityCheckX86:
# #     needs: [BuilderDebRelease]
# #     runs-on: [self-hosted, style-checker]
# #     steps:
# #       - name: Set envs
# #         run: |
# #           cat >> "$GITHUB_ENV" << 'EOF'
# #           TEMP_PATH=${{runner.temp}}/compatibility_check
# #           REPO_COPY=${{runner.temp}}/compatibility_check/ClickHouse
# #           REPORTS_PATH=${{runner.temp}}/reports_dir
# #           EOF
# #       - name: Check out repository code
# #         uses: ClickHouse/checkout@v1
# #         with:
# #           clear-repository: true
# #       - name: Download json reports
# #         uses: actions/download-artifact@v3
# #         with:
# #           path: ${{ env.REPORTS_PATH }}
# #       - name: CompatibilityCheckX86
# #         run: |
# #           sudo rm -fr "$TEMP_PATH"
# #           mkdir -p "$TEMP_PATH"
# #           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
# #           cd "$REPO_COPY/tests/ci" && python3 compatibility_check.py --check-name "Compatibility check (amd64)" --check-glibc --check-distributions
# #       - name: Cleanup
# #         if: always()
# #         run: |
# #           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
# #           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
# #           sudo rm -fr "$TEMP_PATH"
# #   CompatibilityCheckAarch64:
# #     needs: [BuilderDebAarch64]
# #     runs-on: [self-hosted, style-checker]
# #     steps:
# #       - name: Set envs
# #         run: |
# #           cat >> "$GITHUB_ENV" << 'EOF'
# #           TEMP_PATH=${{runner.temp}}/compatibility_check
# #           REPO_COPY=${{runner.temp}}/compatibility_check/ClickHouse
# #           REPORTS_PATH=${{runner.temp}}/reports_dir
# #           EOF
# #       - name: Check out repository code
# #         uses: ClickHouse/checkout@v1
# #         with:
# #           clear-repository: true
# #       - name: Download json reports
# #         uses: actions/download-artifact@v3
# #         with:
# #           path: ${{ env.REPORTS_PATH }}
# #       - name: CompatibilityCheckAarch64
# #         run: |
# #           sudo rm -fr "$TEMP_PATH"
# #           mkdir -p "$TEMP_PATH"
# #           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
# #           cd "$REPO_COPY/tests/ci" && python3 compatibility_check.py --check-name "Compatibility check (aarch64)" --check-glibc
# #       - name: Cleanup
# #         if: always()
# #         run: |
# #           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
# #           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
# #           sudo rm -fr "$TEMP_PATH"
# # #########################################################################################
# # #################################### ORDINARY BUILDS ####################################
# # #########################################################################################
  BuilderDebRelease:
    # needs: [DockerHubPush, FastTest, StyleCheck]
    needs: [DockerHubPush]    
    runs-on: [self-hosted, builder]
    steps:
      - name: Set envs
        run: |
          cat >> "$GITHUB_ENV" << 'EOF'
          TEMP_PATH=${{runner.temp}}/build_check
          IMAGES_PATH=${{runner.temp}}/images_path
          REPO_COPY=${{runner.temp}}/build_check/ClickHouse
          CACHES_PATH=${{runner.temp}}/../ccaches
          BUILD_NAME=package_release
          EOF
      - name: Download changed images
        uses: actions/download-artifact@v3
        with:
          name: changed_images
          path: ${{ env.IMAGES_PATH }}
      - name: Check out repository code
        uses: ClickHouse/checkout@v1
        with:
          clear-repository: true
          fetch-depth: 0  # for performance artifact
          submodules: true
      - name: Build
        run: |
          sudo rm -fr "$TEMP_PATH"
          mkdir -p "$TEMP_PATH"
          cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
          cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
      - name: Upload build URLs to artifacts
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUILD_URLS }}
          path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
      - name: Cleanup
        if: always()
        run: |
          docker ps --quiet | xargs --no-run-if-empty docker kill ||:
          docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
          sudo rm -fr "$TEMP_PATH"
          
#   BuilderBinRelease:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_release
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
  # BuilderDebAarch64:
  #   # needs: [DockerHubPush, FastTest, StyleCheck]
  #   needs: [DockerHubPush]    
  #   runs-on: [self-hosted, ibm-vm]
  #   steps:
  #     - name: Set envs
  #       run: |
  #         cat >> "$GITHUB_ENV" << 'EOF'
  #         TEMP_PATH=${{runner.temp}}/build_check
  #         IMAGES_PATH=${{runner.temp}}/images_path
  #         REPO_COPY=${{runner.temp}}/build_check/ClickHouse
  #         CACHES_PATH=${{runner.temp}}/../ccaches
  #         BUILD_NAME=package_aarch64
  #         EOF
  #     - name: Download changed images
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: changed_images
  #         path: ${{ runner.temp }}/images_path
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         submodules: true
  #         fetch-depth: 0  # for performance artifact
  #     - name: Build
  #       run: |
  #         sudo rm -fr "$TEMP_PATH"
  #         mkdir -p "$TEMP_PATH"
  #         cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
  #         cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
  #     - name: Upload build URLs to artifacts
  #       if: ${{ success() || failure() }}
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ env.BUILD_URLS }}
  #         path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderDebAsan:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=package_asan
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderDebUBsan:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=package_ubsan
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderDebTsan:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=package_tsan
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderDebMsan:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=package_msan
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderDebDebug:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=package_debug
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Apply sparse checkout for contrib # in order to check that it doesn't break build
#         run: |
#           rm -rf "$GITHUB_WORKSPACE/contrib" && echo 'removed'
#           git -C "$GITHUB_WORKSPACE" checkout .  && echo 'restored'
#           "$GITHUB_WORKSPACE/contrib/update-submodules.sh" && echo 'OK'
#           du -hs "$GITHUB_WORKSPACE/contrib" ||:
#           find "$GITHUB_WORKSPACE/contrib" -type f | wc -l ||:
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
# # ##########################################################################################
# # ##################################### SPECIAL BUILDS #####################################
# # ##########################################################################################
#   BuilderBinClangTidy:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_tidy
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinDarwin:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_darwin
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinAarch64:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_aarch64
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinFreeBSD:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_freebsd
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinDarwinAarch64:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_darwin_aarch64
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinPPC64:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_ppc64le
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinAmd64Compat:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_amd64_compat
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
#   BuilderBinAarch64V80Compat:
#     needs: [DockerHubPush, FastTest, StyleCheck]
#     runs-on: [self-hosted, builder]
#     steps:
#       - name: Set envs
#         run: |
#           cat >> "$GITHUB_ENV" << 'EOF'
#           TEMP_PATH=${{runner.temp}}/build_check
#           IMAGES_PATH=${{runner.temp}}/images_path
#           REPO_COPY=${{runner.temp}}/build_check/ClickHouse
#           CACHES_PATH=${{runner.temp}}/../ccaches
#           BUILD_NAME=binary_aarch64_v80compat
#           EOF
#       - name: Download changed images
#         uses: actions/download-artifact@v3
#         with:
#           name: changed_images
#           path: ${{ env.IMAGES_PATH }}
#       - name: Check out repository code
#         uses: ClickHouse/checkout@v1
#         with:
#           clear-repository: true
#           submodules: true
#       - name: Build
#         run: |
#           sudo rm -fr "$TEMP_PATH"
#           mkdir -p "$TEMP_PATH"
#           cp -r "$GITHUB_WORKSPACE" "$TEMP_PATH"
#           cd "$REPO_COPY/tests/ci" && python3 build_check.py "$BUILD_NAME"
#       - name: Upload build URLs to artifacts
#         if: ${{ success() || failure() }}
#         uses: actions/upload-artifact@v3
#         with:
#           name: ${{ env.BUILD_URLS }}
#           path: ${{ env.TEMP_PATH }}/${{ env.BUILD_URLS }}.json
#       - name: Cleanup
#         if: always()
#         run: |
#           docker ps --quiet | xargs --no-run-if-empty docker kill ||:
#           docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
#           sudo rm -fr "$TEMP_PATH" "$CACHES_PATH"
# ############################################################################################
# ##################################### Docker images  #######################################
# ############################################################################################
  # DockerServerImages:
  #   needs:
  #     - BuilderDebRelease
  #     - BuilderDebAarch64
  #   runs-on: [self-hosted, ibm-vm]
  #   steps:
  #     - name: Check out repository code
  #       uses: ClickHouse/checkout@v1
  #       with:
  #         clear-repository: true
  #         fetch-depth: 0  # It MUST BE THE SAME for all dependencies and the job itself
  #     - name: Check docker clickhouse/clickhouse-server building
  #       run: |
  #         cd "$GITHUB_WORKSPACE/tests/ci"
  #         DOCKER_REPO="${DOCKER_REPO:-docker.io}"
  #         python3 docker_server.py --release-type head --no-push \
  #           --image-repo $DOCKER_REPO/clickhouse/clickhouse-server --image-path docker/server
  #         python3 docker_server.py --release-type head --no-push \
  #           --image-repo $DOCKER_REPO/clickhouse/clickhouse-keeper --image-path docker/keeper
  #     - name: Cleanup
  #       if: always()
  #       run: |
  #         docker ps --quiet | xargs --no-run-if-empty docker kill ||:
  #         docker ps --all --quiet | xargs --no-run-if-empty docker rm -f ||:
  #         sudo rm -fr "$TEMP_PATH"
